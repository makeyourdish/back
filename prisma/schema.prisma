// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int            @id @default(autoincrement())
  userName     String?
  email        String         @unique
  passwordHash String
  passwordSalt String
  isAdmin      Boolean        @default(false)
  recipes      Recipes[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  recipesFav   AddFavorites[]
}

model Recipes {
  id              Int            @id @default(autoincrement())
  name            String
  personNb        Int
  Description     String?
  imageUrl        String
  preparationTime DateTime       @db.Time()
  step            String
  priceRange      Int
  difficulty      Int
  published       Boolean        @default(false)
  author          Users          @relation(fields: [authorId], references: [id])
  authorId        Int
  recipeTypeId    RecipeType     @relation(fields: [recipeId], references: [id])
  recipeId        Int
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  usersFav        AddFavorites[]
  ingredients     Contain[]
}

model Ingredients {
  id                     Int                 @id @default(autoincrement())
  imageUrl               String?
  categoryIngredients    CategoryIngredients @relation(fields: [caategoryIngredientsId], references: [id])
  caategoryIngredientsId Int
  recipes                Contain[]
}

model RecipeType {
  id      Int       @id @default(autoincrement())
  name    String
  recipes Recipes[]
}

model CategoryIngredients {
  id          Int           @id @default(autoincrement())
  name        String
  ingredients Ingredients[]
}

model AddFavorites {
  id       Int     @id @default(autoincrement())
  userId   Int
  user     Users   @relation(fields: [userId], references: [id])
  recipeId Int
  recipe   Recipes @relation(fields: [recipeId], references: [id])
}

model Contain {
  id           Int         @id @default(autoincrement())
  recipeId     Int
  recipe       Recipes     @relation(fields: [recipeId], references: [id])
  ingredientId Int
  ingredient   Ingredients @relation(fields: [ingredientId], references: [id])
}
